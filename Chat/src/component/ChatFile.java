/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package component;

import event.EventFileReceiver;
import event.EventFileSender;
import event.PublicEvent;
import java.awt.Color;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.StandardCopyOption;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.SwingUtilities;
import model.ModelFileSender;
import model.ModelReceiveFile;
import model.ModelReceiveMessage;
import service.Service;
import view.Main;

/**
 *
 * @author Admin
 */
public class ChatFile extends javax.swing.JLayeredPane {

    /**
     * Creates new form ChatFile
     */
    public ChatFile() {
        initComponents();
        setOpaque(false);
        init();
    }
    
    private String filePath;
    
    public void setFile (boolean right, String filePath) {
        try {
            Path path = Paths.get(filePath);
            path = path.toAbsolutePath();
            long fileSize = Files.size(path);
            String fileName = path.getFileName().toString();
            this.filePath = filePath;
            lbFileName.setText(fileName);
            lbFileSize.setText(String.format("%.1f",(float)fileSize/1024)+"Kb");
            jPanel1.setBackground(new Color(right?179:225,right?233:225,right?255:225));
        } catch (IOException ex) {
            ex.printStackTrace();
        }
    }
    
    public void setFile(boolean right, ModelReceiveMessage message,ModelReceiveFile dataFile) {
        lbFileName.setText(dataFile.getFileName());
        lbFileSize.setText(String.format("%.1f",(float)dataFile.getFileSize()/1024)+"Kb");
        jPanel1.setBackground(new Color(right?179:225,right?233:225,right?255:225));
        try {
            Service.getInstance().addFileReceiver(message,dataFile.getFileID(), new EventFileReceiver(){
                @Override
                public void onReceiving(double percentage) {
                    progress.setVisible(true);
                    progress.setValue((int) percentage);
                }

                @Override
                public void onStartReceiving() {
               
                }

                @Override
                public void onFinish(File file) {
                    progress.setValue(0);
                    filePath=file.getAbsolutePath();
                    System.err.println(filePath);
//                    pic.setImage(image);
//                    addEvent(pic,image,file.getAbsolutePath());
                }
            });
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
    
    public void setFile (boolean right, ModelFileSender fileSender) {
        lbFileName.setText(fileSender.getFile().getName());
        lbFileSize.setText(String.format("%.1f",(float)fileSender.getFileSize()/1024)+"Kb");
        fileSender.addEvent(new EventFileSender(){
            @Override
            public void onSending(double percentage) {
                progress.setVisible(true);
                progress.setValue((int) percentage);
            }

            @Override
            public void onStartSending() {
           
            }

            @Override
            public void onFinish() {
                progress.setValue((int) 0);
                filePath = fileSender.getFile().getAbsolutePath();
            }
        });
        jPanel1.setBackground(new Color(right?179:225,right?233:225,right?255:225));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        progress = new swing.Progress();
        jPanel1 = new javax.swing.JPanel();
        lbFileName = new javax.swing.JLabel();
        lbFileSize = new javax.swing.JLabel();

        progress.setBackground(new java.awt.Color(102, 102, 255));
        progress.setProgressType(swing.Progress.ProgressType.FILE);

        jPanel1.setLayout(new java.awt.GridLayout(2, 1));

        lbFileName.setText("File Name");
        jPanel1.add(lbFileName);

        lbFileSize.setForeground(new java.awt.Color(66, 44, 176));
        lbFileSize.setText("5 MB");
        jPanel1.add(lbFileSize);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(progress, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(progress, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lbFileName;
    private javax.swing.JLabel lbFileSize;
    private swing.Progress progress;
    // End of variables declaration//GEN-END:variables

    private void init() {
        addMouseListener(new MouseAdapter(){
            @Override
            public void mouseClicked(MouseEvent e) {
                if(SwingUtilities.isLeftMouseButton(e)){
                    if(filePath!=null&&!filePath.isEmpty()){
                        JFileChooser fileChooser = new JFileChooser();
                        fileChooser.setDialogTitle("Choose destination folder");
                        fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
                        int option = fileChooser.showSaveDialog(Main.getFrames()[0]);
                        if (option == JFileChooser.APPROVE_OPTION) {
                            Path sourcePath = Paths.get(filePath);
                             Path destinationFolder = fileChooser.getSelectedFile().toPath();

                            try {
                                String fileName = sourcePath.getFileName().toString();
                                Path destinationPath = destinationFolder.resolve(fileName);

                                if (!Files.exists(destinationPath) || Files.list(destinationPath).findFirst().isEmpty()) {
                                    Files.copy(sourcePath, destinationPath, StandardCopyOption.REPLACE_EXISTING);
                                    System.out.println("File copied successfully!");
                                } else {
                                    System.out.println("Destination folder is not empty.");
                                }
                            } catch (IOException ex) {
                                ex.printStackTrace();
                            }
                        }
                    }
                }
            }
        });
    }
}
